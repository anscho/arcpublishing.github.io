[  {    "type": "delete",    "url": "/api/v2/format/:_id?website={websiteId}",    "title": "DELETE: Format",    "name": "deleteFormat",    "group": "Format",    "description": "<p><font size=\"2\" color=\"blue\">GIVEN</font>:&nbsp that an HTTP request is made to DELETE a format URL for a \"valid ArcOrg & website that exist in Arc-Site-Service\"</p> <p style=\"text-indent: 3em;\"> AND the _id belongs to a valid tuple(object) within the DB collection AND associated with the provided ArcOrg & website</p> <p><font size=\"2\" color=\"blue\">THEN</font>:&nbsp delete entry from peristance layer(database) and send the success response code</p> <p style=\"text-indent: 3em;\">OR ELSE propagate the database error message as part of the  HTTP response message</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p><code>Required</code> <em>{Path Param}</em> Unique ID for that {website} Collection.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "website",            "description": "<p><code>Required</code> <em>{Query Param}</em>, Represents a unique website under a given Organization</p>"          }        ]      }    },    "version": "2.0.0",    "filename": "./website_routes/format.js",    "groupTitle": "Format"  },  {    "type": "get",    "url": "/api/v2/format/?website={websiteId}",    "title": "GET: Format",    "name": "getFormat",    "group": "Format",    "description": "<p><font size=\"2\" color=\"blue\">GIVEN</font>:&nbsp that an HTTP request is made to FETCH the format URL for a \"valid ArcOrg & website that exist in Arc-Site-Service\"</p> <p><font size=\"2\" color=\"blue\">THEN</font>:&nbsp return all the formatURL Object found in the database ONLY IF the mongo collection exist </p> <p style=\"text-indent: 2.7em;\"> IF NOT then INSERT a formatURL type Object with _id=default into the database and return this default formatURL as part of the request</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "website",            "description": "<p><code>Required</code> <em>{Query Param}</em>, Represents a unique website under a given Organization</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n[\n {\n   \"_id\": \"default\",\n   \"priority\": 100000,\n   \"format\": \"%publish_date|year()%/%publish_date|month()%/%publish_date|day()%/%headlines.basic|slugify()%/\"\n },\n {\n   \"_id\": \"1516397751079\",\n   \"format\": \"%publish_date|year()%/%publish_date\",\n   \"priority\": 9,\n },\n {\n   \"_id\": \"1516397700559\",\n   \"format\": \"%publish_date|year()%/%publish_date|month()%/%publish_date|day()%/%headlines.basic|slugify()%/\",\n   \"priority\": 11,\n }, ...\n ]",          "type": "json"        }      ]    },    "version": "2.0.0",    "filename": "./website_routes/format.js",    "groupTitle": "Format"  },  {    "type": "post",    "url": "/api/v2/format/?website={websiteId}",    "title": "POST: Format",    "name": "postFormat",    "group": "Format",    "description": "<p><font size=\"2\" color=\"blue\">GIVEN</font>:&nbsp that an HTTP request is made to CREATE and/or UPDATE a format URL for a \"valid ArcOrg & website that exist in Arc-Site-Service\" with the</p> <p style=\"text-indent: 3em;\"> <font size=\"2\" color=\"blue\">PRE-CONDITION</font>:&nbsp The minimum required JSON fields are 'format', 'priority' and 'criteria' </p> <p style=\"text-indent: 3em;\"> <font size=\"2\" color=\"blue\">AND</font> attribute 'id' is optional</p> <p><font size=\"2\" color=\"blue\">WHERE</font>:&nbsp </p> <p style=\"text-indent: 4.7em;\"> <li>'criteria' field must be of type JSON </li></p> <p style=\"text-indent: 4.7em;\"> <li>'id' field can be of value = 'default'</li></p> <p style=\"text-indent: 4.7em;\"> <li>'priority' field must be of type Numeric </li></p> <p style=\"text-indent: 4.7em;\"> <li>'format' field must contain at least ONE of the following (or a combination of all separated by the forward slash symbol delimiter ONLY)</li></p> <p style=\"text-indent: 8em;\"><ol><li>%publish_date|year()%</li><li>%publish_date|month()%</li><li>%publish_date|day()%</li><li>%headlines.basic|slugify()%</li></ol></p> <p><font size=\"2\" color=\"blue\">THEN</font>:&nbsp the formatURL object will be persisted IF the 'id' EXIST as part of the original JSON request body</p> <p style=\"text-indent: 3em;\"><font size=\"2\" color=\"blue\">OR ELSE</font> Add Unique 'id' field generated using DateTime stamp and updated to the original JSON request body before inserting into the database</p> <p style=\"text-indent: 3em;\"> <font size=\"2\" color=\"blue\">AND</font> users are allowed to update the same 'id' over and over again (i.e. upsert = update + insert)</p>",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Content-Type",            "description": "<p>application/json</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "website",            "description": "<p><code>Required</code> <em>{Query Param}</em>, Represents a unique website under a given Organization</p>"          }        ]      },      "examples": [        {          "title": "Sample-Request:",          "content": "{\n \"criteria\":\"{\\\"type\\\":\\\"story\\\"}\",\n \"priority\":\"1\",\n \"format\":\"%publish_date|year()%/%publish_date|month()%/%publish_date|day()%/%headlines.basic|slugify()%\"\n}",          "type": "json"        }      ]    },    "version": "2.0.0",    "filename": "./website_routes/format.js",    "groupTitle": "Format"  },  {    "type": "delete",    "url": "/api/v2/url/?url={urlId}&website={websiteId}",    "title": "DELETE: URL",    "name": "deleteURL",    "group": "URL",    "description": "<p>DELETE by url.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "website",            "description": "<p><code>Required</code> <em>{Query Param}</em>, Represents a unique website under a given Organization</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "url",            "description": "<p><code>Required</code> <em>{Query Param}</em> is unique ID for that website.</p>"          }        ]      }    },    "version": "2.0.0",    "filename": "./website_routes/url.js",    "groupTitle": "URL"  },  {    "type": "get",    "url": "/api/v2/url/allwebsiteurls?&content_id={content_id}",    "title": "Get: AllWebsiteUrls",    "name": "getAllWebsitesURLs",    "group": "URL",    "description": "<p><font size=\"2\" color=\"blue\">GIVEN</font>:&nbsp that an HTTP request is made to FETCH All the website's (Multisite tags) URL for a valid</p> <p style=\"text-indent: 2.7em;\">ArcOrg (that exist in Arc-Site-Service) based on one of the 'request id type'</p> <p style=\"text-indent: 10em;\"><ol><li>_id</li><li>arc_uuid</li><li>url</li><li>content_id</li></ol></p> <p><font size=\"2\" color=\"blue\">THEN</font>:&nbsp  Return all the URL's found in each and every website (multisite tag) associated with this ArcOrg,</p> <p style=\"text-indent: 2.7em;\">including the URL found in the single site collection using ONLY the supplied 'request id type'</p> <p style=\"text-indent: 2.7em;\"><font size=\"2\" color=\"blue\">AND</font>:&nbsp while scanning all the websites(multisite tags) associated with this ArcOrg</p> <p style=\"text-indent: 4.7em;\">if an object is NOT found using ONLY the supplied 'request id type' in that website collection add the database error message </p> <p style=\"text-indent: 4.7em;\">as part of the response JSON body along with the rest of the found URL object from other associated websites</p> <p style=\"text-indent: 4.7em;\">under the '_error' section</p> <p>Following are the different combination of the 'request id type' that should be sent as query param :-</p> <ol> <li> <p>GET /api/v2/url/allwebsiteurls?<font size=\"3\" color=\"blue\">_id={id}</font></p> </li> <li> <p>GET /api/v2/url/allwebsiteurls?<font size=\"3\" color=\"blue\">arc_uuid={arc_uuid}</font></p> </li> <li> <p>GET /api/v2/url/allwebsiteurls?<font size=\"3\" color=\"blue\">url={url}</font></p> </li> <li> <p>GET /api/v2/url/allwebsiteurls?<font size=\"3\" color=\"blue\">content_id={content_id}</font></p> </li> </ol> <p><font size=\"2\" color=\"red\">NOTE:</font>:&nbsp 'Get AllWebsiteUrls' iterates over all the associated website's (for the give ArcOrg) using the same logic as 'Get Url'</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "url",            "description": "<p><em>{Query Param}</em></p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "content_id",            "description": "<p><em>{Query Param}</em></p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p><em>{Query Param}</em></p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "arc_uuid",            "description": "<p><em>{Query Param}</em></p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n \"_id\": \"ABC\",\n \"version\": \"0.6.0\",\n\n \"websites\": {\n   \"latimes\": {\n     \"website_url\": \"/sports/lakers/lakers-won-ya\"\n   },\n   \"tribune\": {\n     \"website_url\": \"/sports/bulls/lakers-won-boo\"\n   }\n },\n \"_errors\": {\n\t \"staging\": \"Canonical url with _id=1234 doesn't exist.\",\n\t \"balsun\": \"Canonical url with _id=1234 doesn't exist.\"\n }\n}",          "type": "json"        }      ]    },    "version": "2.0.0",    "filename": "./website_routes/url.js",    "groupTitle": "URL"  },  {    "type": "get",    "url": "/api/v2/url/?website={websiteId}&content_id={content_id}",    "title": "Get: URL",    "name": "getURL",    "group": "URL",    "description": "<p>HTTP GET Allwebsiteurls, gets all urls across all websites for a given id entry by <code>_id | arc_uuid</code> or <code>url</code>.</p> <p><font size=\"2\" color=\"blue\">GIVEN</font>:&nbsp that an HTTP request is made to FETCH the URL info for a valid ArcOrg & website (that exist in Arc-Site-Service)</p> <p style=\"text-indent: 2.7em;\">using of the 'request id type'</p> <p style=\"text-indent: 10em;\"><ol><li>_id</li><li>arc_uuid</li><li>url</li><li>content_id</li></ol></p> <p><font size=\"2\" color=\"blue\">THEN</font>:&nbsp if url 'request id type' is provided then return the first element found in the respective ArcOrg collection</p> <p style=\"text-indent: 2.7em;;\">if request id of type '_id'  or 'content_id' or 'arc_uuid' should always return the exact same database result set </p> <p style=\"text-indent: 2.7em;;\">the response JSON body will always append this 'request type id` with the DataBase result set </p> <p style=\"text-indent: 2.7em;;\">if '_id' or 'content_id' or 'arc_uuid' request id type is provided and the mongo collection associated with that ArcOrg is not found then </p> <p style=\"text-indent: 2.7em;;\">create a default URL Format Object for this new ArcOrg and Insert into the database and returned as this default as part of the response object</p> <p>Following are the different combination of query param supported:-</p> <ol> <li> <p>GET /api/v2/url/?<font size=\"3\" color=\"blue\">website={websiteId}</font>&amp;<font size=\"3\" color=\"blue\">_id={id}</font></p> </li> <li> <p>GET /api/v2/url/?<font size=\"3\" color=\"blue\">website={websiteId}</font>&amp;<font size=\"3\" color=\"blue\">arc_uuid={arc_uuid}</font></p> </li> <li> <p>GET /api/v2/url/?<font size=\"3\" color=\"blue\">website={websiteId}</font>&amp;<font size=\"3\" color=\"blue\">url={url}</font></p> </li> <li> <p>GET /api/v2/url/?<font size=\"3\" color=\"blue\">website={websiteId}</font>&amp;<font size=\"3\" color=\"blue\">content_id={content_id}</font></p> </li> </ol>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "website",            "description": "<p><code>Required</code> <em>{Query Param}</em>, Represents a unique website under a given Organization</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "url",            "description": "<p><em>{Query Param}</em></p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "content_id",            "description": "<p><em>{Query Param}</em></p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p><em>{Query Param}</em></p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "arc_uuid",            "description": "<p><em>{Query Param}</em></p>"          }        ]      }    },    "version": "2.0.0",    "filename": "./website_routes/url.js",    "groupTitle": "URL"  },  {    "type": "post",    "url": "/api/v2/url/allwebsiteurls",    "title": "POST: AllWebsiteUrls",    "name": "postAllWebsitesURLs",    "group": "URL",    "description": "<p>POST list of <code>websites</code> containing <code>website_section</code> This request will create an ArrayList of  individual website_section request and Add/Update each website_url with ANS_Document. Each ANS document to [store | generate | regenerate] the website_url for each Org_website.</p> <p>Following are the different combination of query param supported:-</p> <ol> <li> <p>POST /api/v2/url/allwebsiteurls</p> </li> <li> <p>POST /api/v2/url/allwebsiteurls?<font size=\"3\" color=\"blue\">redirect_existing=false</font>&amp;<font size=\"3\" color=\"blue\">test</font></p> </li> <li> <p>POST /api/v2/url/allwebsiteurls?<font size=\"3\" color=\"blue\">test</font></p> </li> </ol>",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Content-Type",            "description": "<p>application/json</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "redirect_existing",            "description": "<p><em>{Query Param}</em> At the moment only <code>false</code> is support</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "test",            "description": "<p><em>{Query Param}</em> test query param indicates that a POST response will be generated without any update or insert to the Mongo collection</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p><code>Required</code> <em>{JSON Body Attribute}</em> is unique ID for that website, Should contain only alphanumeric characters and hyphens, and underscores</p>"          }        ]      },      "examples": [        {          "title": "Request-Example:",          "content": "{\n \"_id\": \"1234\",\n \"type\": \"story\",\n \"version\": \"0.6.0\",\n \"canonical_website\": \"latimes\",\n \"canonical_url\": \"/sports/lakers/lakers-beat-bulls\",\n\n \"websites\": {\n   \"tribune\": {\n     \"website_section\": {\n        \"type\": \"section\",\n        \"version\": \"0.6.0\",\n        \"_id\": \"/sports/bulls\",\n        \"website\": \"tribune\",\n        \"name\": \"Chicago Bulls\"\n      }\n    },\n\n   \"bmoresun\": {\n      \"website_url\": \"/sports/lakers-beat-bulls\"\n    }\n  }\n}",          "type": "json"        }      ]    },    "version": "2.0.0",    "filename": "./website_routes/url.js",    "groupTitle": "URL"  },  {    "type": "post",    "url": "/api/v2/url/?website={websiteId}",    "title": "POST: URL",    "name": "postURL",    "group": "URL",    "description": "<p>POST an ANS document to [store | generate | regenerate] the canonical_url for that document.</p> <p>Following are the different combination of query param supported:-</p> <ol> <li> <p>POST /api/v2/url/?<font size=\"3\" color=\"blue\">website={websiteId}</font></p> </li> <li> <p>POST /api/v2/url/?<font size=\"3\" color=\"blue\">website={websiteId}</font>&amp;<font size=\"3\" color=\"blue\">redirect_existing=false</font>&amp;<font size=\"3\" color=\"blue\">test</font></p> </li> <li> <p>POST /api/v2/url/?<font size=\"3\" color=\"blue\">website={websiteId}</font>&amp;<font size=\"3\" color=\"blue\">test</font></p> </li> </ol>",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Content-Type",            "description": "<p>application/json</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "website",            "description": "<p><code>Required</code> <em>{Query Param}</em>, Represents a unique website under a given Organization</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "redirect_existing",            "description": "<p><em>{Query Param}</em> At the moment only <code>false</code> is support</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "test",            "description": "<p><em>{Query Param}</em> test query param indicates that a POST response will be generated without any update or insert to the Mongo collection</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p><em>{JSON Body Attribute}</em> is unique ID for that website, Should contain only alphanumeric characters and hyphens, and underscores</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "content_id",            "description": "<p><em>{JSON Body Attribute}</em></p>"          }        ]      }    },    "version": "2.0.0",    "filename": "./website_routes/url.js",    "groupTitle": "URL"  },  {    "type": "post",    "url": "/api/v2/url/bulk?website={websiteId}",    "title": "POST: Bulk URLs",    "name": "postURLbulk",    "group": "URL",    "description": "<p>POST an ANS document to [store | generate | regenerate] the canonical_url for that document.</p> <p>Following are the different combination of query param supported:-</p> <ol> <li> <p>POST /api/v2/url/bulk?<font size=\"3\" color=\"blue\">website={websiteId}</font></p> </li> <li> <p>POST /api/v2/url/bulk?<font size=\"3\" color=\"blue\">website={websiteId}</font>&amp;<font size=\"3\" color=\"blue\">redirect_existing=false</font>&amp;<font size=\"3\" color=\"blue\">test</font></p> </li> <li> <p>POST /api/v2/url/bulk?<font size=\"3\" color=\"blue\">website={websiteId}</font>&amp;<font size=\"3\" color=\"blue\">test</font></p> </li> </ol>",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Content-Type",            "description": "<p>application/json</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "website",            "description": "<p><code>Required</code> <em>{Query Param}</em>, Represents a unique website under a given organization</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "redirect_existing",            "description": "<p><em>{Query Param}</em> At the moment only <code>false</code> is support</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "test",            "description": "<p><em>{Query Param}</em> test query param indicates that a POST response will be generated without any update or insert to the Mongo collection</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p><em>{JSON Body Attribute}</em> unique ID for that website, Should contain only alphanumeric characters and hyphens, and underscores</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "content_id",            "description": "<p><em>{JSON Body Attribute}</em></p>"          }        ]      },      "examples": [        {          "title": "Request-Example:",          "content": "{\n  \"url\":\"/2015/6/24/the-default-headline-for-this-story\",\n  \"format\":{\n     \"_id\":\"default\",\n     \"priority\":100000,\n     \"format\":\"%publish_date|year()%/%publish_date|month()%/%publish_date|day()%/%headlines.basic|slugify()%\"\n  }\n}",          "type": "json"        }      ]    },    "version": "2.0.0",    "filename": "./website_routes/url.js",    "groupTitle": "URL"  },  {    "type": "get",    "url": "/api/v2/url/search?website={websiteId}&content_id={content_id}",    "title": "GET: Search for URL",    "name": "searchURL",    "group": "URL",    "description": "<p>Search by content_id or url.  Return all entries and redirects, for a given website</p> <p>Following are the different combination of query param supported:-</p> <ol> <li> <p>GET /api/v2/url/search?<font size=\"3\" color=\"blue\">website={websiteId}</font>&amp;<font size=\"3\" color=\"blue\">content_id={content_id}</font></p> </li> <li> <p>GET /api/v2/url/search?<font size=\"3\" color=\"blue\">website={websiteId}</font>&amp;<font size=\"3\" color=\"blue\">url={url}</font></p> </li> </ol>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "website",            "description": "<p><code>Required</code> <em>{Query Param}</em>, Represents a unique website under a given Organization</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "content_id",            "description": "<p><em>{Query Param}</em></p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "url",            "description": "<p><em>{Query Param}</em></p>"          }        ]      }    },    "version": "2.0.0",    "filename": "./website_routes/url.js",    "groupTitle": "URL"  }]
